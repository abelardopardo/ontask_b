# Generated by Django 2.2.24 on 2023-03-31 01:29

from django.db import migrations, models
import django.db.models.deletion

import ontask.models
from ontask.dataops import formula

def create_filter_in_view(apps, schema_editor):
    """
    Traverse all actions and update the content.

    :param apps:
    :param schema_editor:
    :return:
    """
    if schema_editor.connection.alias != 'default':
        return

    # View = apps.get_model('ontask', 'View')
    # Filter = apps.get_model('ontask', 'Filter')
    for v_obj in ontask.models.View.objects.all():
        if v_obj.filter is not None:
            continue

        if v_obj.has_empty_formula:
            continue

        f_obj = ontask.models.Filter.objects.create(
            workflow=v_obj.workflow,
            _formula=v_obj._formula,
            description_text=v_obj.description_text,
            n_rows_selected=v_obj.num_rows)

        f_obj.columns.set(f_obj.workflow.columns.filter(
            name__in=formula.get_variables(f_obj.formula)))

        v_obj.filter = f_obj
        v_obj.save()


class Migration(migrations.Migration):

    dependencies = [
        ('ontask', '0042_auto_20230331_1156'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='filter',
            name='view',
        ),
        migrations.AddField(
            model_name='view',
            name='filter',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='view', to='ontask.Filter'),
        ),
	migrations.RunPython(code=create_filter_in_view),
    ]
