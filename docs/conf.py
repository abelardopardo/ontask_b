# OnTask documentation build configuration file.
#
# It detects if the documentation is generated for a production instance, or as
# stand-along by checking the existence of either ENV_FILENAME, or local.env
# in the settings directory.
#
import os
import sys
from importlib import import_module
from os.path import dirname, exists, join

import django
import environ
import sphinx_material
from django.conf import settings
from django.templatetags.static import static
from django.urls import reverse

# -- OnTask Specific Configuration ---------------------------------------------

# Load ontask package to have access to the version number
sys.path.append(os.path.abspath('..'))
ontask = import_module('ontask')

# Use 12factor inspired environment variables.
env = environ.Env()
# Load the values in the env file if it exists
ENV_FILENAME = join(
    dirname(dirname(__file__)),
    'settings',
    env('ENV_FILENAME', default='local.env'))

# Instance documentation is true if it is part of an instance ready to execute
instance_documentation = exists(ENV_FILENAME)

if instance_documentation:
    # Instance is for execution, load environment to access all required data
    django.setup()

# -- General configuration ------------------------------------------------
# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.extlinks',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
    'sphinx_copybutton',
    # 'sphinx_search.extension',
    'sphinx.ext.ifconfig',
    'sphinx.ext.githubpages']

autosummary_generate = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The short X.Y version.
version = ontask.__version__
# The full version, including alpha/beta/rc tags.
release = version

# General information about the project.
project = 'OnTask'
copyright = 'Content Licensed under Creative Commons BY 4.0'
author = 'Abelardo Pardo'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    '_build',
    'Thumbs.db',
    '.DS_Store',
    'Scenarios/scenario_04*',
    '**/include_*.rst']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for HTML output ----------------------------------------------

html_show_sourcelink = False

extensions.append('sphinx_material')
html_theme_path = sphinx_material.html_theme_path()
html_context = sphinx_material.get_html_context()
html_theme = 'sphinx_material'

html_theme_options = {
    'nav_links': [
        {
            'href': 'https://ontasklearning.org',
            'internal': False,
            'title': 'OnTask Project Page'}],

    'heroes': {
        'index':
            """<div><img src="{0}" alt="{1}" style="width: 300px;"/>
            </div><div>{2}</div>""".format(
                '_static/ontask-logo-1.png',
                'OnTask Home',
                'A platform to deploy personalised feedback at scale'),
    },

    # Set the repo location to get a badge with stats
    'base_url':
        static(settings.ONTASK_HELP_URL) if instance_documentation else '',
    'repo_url': 'https://github.com/abelardopardo/ontask_b/',
    'repo_name': 'GitHub Repo',
    'repo_type': 'github',

    # master doc
    'master_doc': 'index',
    
    # Set the color and the accent color
    'color_primary': 'teal',
    'color_accent': 'light-green',

    'html_minify': False,
    'html_prettify': True,
    'css_minify': True,

    # Visible levels of the global TOC; -1 means unlimited
    'globaltoc_depth': 3,
    # If False, expand all TOC entries
    'globaltoc_collapse': True,
    # If True, show hidden TOC entries
    'globaltoc_includehidden': False,

    'touch_icon': 'logo-big.png',
    'version_dropdown': False,
}

if instance_documentation:
    html_theme_options['nav_links'].append({
        'href': reverse('home'),
        'internal': False,
        'title': 'Back to tool'})

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
html_sidebars = {
    '**': [
        'logo-text.html',
        'globaltoc.html',
        'localtoc.html',
        'searchbox.html']}

# -- Additional Options --------------------------------------------------

rst_prolog = '.. |ontask_version| replace:: %s\n' % version

# -- Add bootstrap 5 icons --------------------------------------------------
bootstrap_icons = [
    'fast-forward',
    'chevron-left',
    'chevron-right',
    'arrow-left',
    'journal-text',
    'calendar',
    'bar-chart-line-fill',
    'graph-up-arrow',
    'check',
    'check-circle-fill',
    'check-square-fill',
    'clock-fill',
    'files',
    'code-slash',
    'gear',
    'chat-right-quote-fill',
    'file-zip-fill',
    'download',
    'envelope-fill',
    'exclamation-triangle',
    'eye-fill',
    'file-earmark-text-fill',
    'file-earmark-zip-fill',
    'file-earmark-code-fill',
    'funnel-fill',
    'house-fill',
    'link-45deg',
    'dash-square-fill',
    'paperclip',
    'pencil-fill',
    'plus',
    'question-circle-fill',
    'rocket-takeoff-fill',
    'save-fill',
    'share-fill',
    'star-fill',
    'skip-start-fill',
    'skip-end-fill',
    'table',
    'list-task',
    'trash-fill',
    'upload',
    'person-square']

rst_prolog += '\n'.join([
    '.. |bi-{0}| raw:: html\n\n   <i class="bi-{0}"></i>\n'.format(icon_name)
    for icon_name in bootstrap_icons
])

rst_prolog += '\n.. |test-all-icons| raw:: html\n\n   <ul>'
rst_prolog += '\n'.join([
    '   <li><i class="bi-{0}"></i></li>'.format(icon_name)
    for icon_name in bootstrap_icons
])
rst_prolog += '\n   </ul>'


def setup(app):
    """Add additional stylesheets."""
    app.add_css_file('css/custom.css')  # may also be a URL
    app.add_css_file(
        'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.4/font/bootstrap-icons.css'
    )
